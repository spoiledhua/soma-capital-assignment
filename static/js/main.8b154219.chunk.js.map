{"version":3,"sources":["images/falcon1.jpg","images/falcon9.jpg","images/falconheavy.jpg","images/starship.jpg","serviceWorker.js","redux/reducers/rocket.js","redux/types/index.js","redux/reducers/launches.js","layouts/AppLayout.jsx","components/StyledCard.jsx","redux/actions/rocket.js","redux/actions/launches.js","components/RocketCard.jsx","pages/HomePage.jsx","index.js","configureStore.js","redux/reducers/index.js","routes.js"],"names":["module","exports","Boolean","window","location","hostname","match","rocket","state","rocketId","rocketName","action","type","launches","launchesCopy","payload","error","filter","launch","rocket_type","details","toLowerCase","includes","search","App","route","className","renderRoutes","routes","useStyles","makeStyles","content","paddingLeft","paddingRight","paddingTop","paddingBottom","top","end","header","marginTop","marginBottom","paper","borderRadius","StyledCard","launchDate","classes","Fragment","Paper","elevation","Grid","item","Typography","color","selectRocket","selectLaunchesBegin","selectLaunchesFailure","selectLaunches","dispatch","a","fetch","url","then","response","json","result","catch","card","height","width","cardContent","padding","backgroundColor","connect","image","onCardClick","getLaunches","Card","onClick","CardActionArea","CardMedia","component","alt","title","CardContent","container","missionTitle","row","textField","searchLaunches","useEffect","direction","align","xs","sm","md","lg","xl","TextField","placeholder","variant","fullWidth","onChange","e","target","value","falcon1","falcon9","falconheavy","starship","map","rocket_name","launch_site","site_name_long","Date","launch_date_utc","toLocaleDateString","history","createBrowserHistory","store","initialState","middleware","thunk","routerMiddleware","push","createLogger","createStore","combineReducers","router","connectRouter","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","configureStore","AppLayout","HomePage","path","exact","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b154219.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/falcon1.1ef66f51.jpg\";","module.exports = __webpack_public_path__ + \"static/media/falcon9.c68ad52c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/falconheavy.efb5ed00.jpg\";","module.exports = __webpack_public_path__ + \"static/media/starship.47edea8e.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    SELECT_ROCKET\n  } from '../types';\n\nconst rocket = (state = {\n    rocket: { rocketId: \"\", rocketName: \"\"},\n  }, action) => {\n    switch (action.type) {\n      case SELECT_ROCKET: {\n        return {\n          ...state,\n          rocket: action.rocket,\n        }\n      }\n    default:\n        return state;\n    }\n}\n\nexport default rocket;","export const SELECT_ROCKET = 'SELECT_ROCKET';\nexport const SELECT_LAUNCHES_BEGIN = 'SELECT_LAUNCHES_BEGIN';\nexport const SELECT_LAUNCHES_SUCCESS = 'SELECT_LAUNCHES_SUCCESS';\nexport const SELECT_LAUNCHES_FAILURE = 'SELECT_LAUNCHES_FAILURE';\nexport const SEARCH_LAUNCHES = 'SEARCH_LAUNCHES';","import {\n    SELECT_LAUNCHES_BEGIN,\n    SELECT_LAUNCHES_SUCCESS,\n    SELECT_LAUNCHES_FAILURE,\n    SEARCH_LAUNCHES\n  } from '../types';\n\nconst launches = (state = {\n    launches: [],\n    launchesCopy: []\n  }, action) => {\n    switch (action.type) {\n      case SELECT_LAUNCHES_BEGIN: {\n        return {\n          ...state\n        }\n      }\n      case SELECT_LAUNCHES_SUCCESS: {\n        return {\n          ...state,\n          launches: action.payload,\n          launchesCopy: action.payload,\n          error: '',\n        }\n      }\n      case SELECT_LAUNCHES_FAILURE: {\n        return {\n          ...state,\n          launches: [],\n          launchesCopy: [],\n          error: action.payload,\n        }\n      }\n      case SEARCH_LAUNCHES: {\n        return {\n          ...state,\n          launches: state.launchesCopy.filter(launch => {\n            if (launch.rocket.rocket_type !== null && launch.details !== null) {\n              return (launch.rocket.rocket_type.toLowerCase().includes(action.search.toLowerCase()) || launch.details.toLowerCase().includes(action.search.toLowerCase()));\n            }\n            else if (launch.rocket.rocket_type !== null) {\n              return launch.rocket.rocket_type.toLowerCase().includes(action.search.toLowerCase());\n            }\n            else if (launch.details !== null) {\n              launch.details.toLowerCase().includes(action.search.toLowerCase());\n            }\n            else {\n              return false;\n            }\n          }),\n        }\n      }\n    default:\n        return state;\n    }\n}\n\nexport default launches;","import React from 'react';\nimport './AppLayout.css';\n\nimport { renderRoutes } from 'react-router-config';\n\nfunction App({ route }) {\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        {renderRoutes(route.routes)}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { Paper, Typography, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    content: {\n        paddingLeft: '20px',\n        paddingRight: '20px',\n        paddingTop: '6px',\n        paddingBottom: '6px',\n    },\n    top: {\n        paddingLeft: '20px',\n        paddingRight: '20px',\n        paddingTop: '12px',\n        paddingBottom: '6px',\n    },\n    end: {\n        paddingLeft: '20px',\n        paddingRight: '20px',\n        paddingTop: '6px',\n        paddingBottom: '12px',\n    },\n    header: {\n        marginTop: '0px',\n        marginBottom: '0px',\n    },\n    paper: {\n        borderRadius: '8px'\n    }\n});\n\nconst StyledCard = ({ rocketName, type, details, location, launchDate }) => {\n\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Paper className={classes.paper} elevation={5}>\n                <Grid>\n                    <Grid className={classes.top} item><h3 className={classes.header}>Rocket Name: {rocketName}</h3></Grid>\n                    <Grid className={classes.content} item><Typography color=\"textSecondary\"><strong>Type: </strong>{type}</Typography></Grid>\n                    <Grid className={classes.content} item><strong>Details: </strong>{details}</Grid>\n                    <Grid className={classes.content} item><strong>Location: </strong>{location}</Grid>\n                    <Grid className={classes.end} item><strong>Launch Date: </strong>{launchDate}</Grid>\n                </Grid>\n            </Paper>\n        </React.Fragment>\n    )\n}\n\nexport default StyledCard;\n","import {\n    SELECT_ROCKET\n  } from '../types';\n\nexport const selectRocket = (rocketId, rocketName) => {\n    return {\n        type: SELECT_ROCKET,\n        rocket: {rocketId: rocketId, rocketName: rocketName},\n    };\n};","import {\n    SELECT_LAUNCHES_BEGIN,\n    SELECT_LAUNCHES_SUCCESS,\n    SELECT_LAUNCHES_FAILURE,\n    SEARCH_LAUNCHES\n  } from '../types';\n\nexport const selectLaunchesBegin = () => {\n    return {\n        type: SELECT_LAUNCHES_BEGIN\n    };\n};\n\nexport const selectLaunchesSuccess = payload => {\n    return {\n        type: SELECT_LAUNCHES_SUCCESS,\n        payload: payload\n    };\n};\n\nexport const selectLaunchesFailure = error => {\n    return {\n        type: SELECT_LAUNCHES_FAILURE,\n        payload: error\n    };\n};\n\nexport const selectLaunches = rocketId => async dispatch => {\n    dispatch(selectLaunchesBegin);\n    const filter = \"filter=rocket(rocket_name,rocket_type),launch_date_utc,launch_site/site_name_long,details\";\n    const url = \"https://api.spacexdata.com/v3/launches\";\n    const rocket = \"rocket_id=\" + rocketId;\n    await fetch(url + \"?\" + filter + \"&\" + rocket)\n        .then(response => response.json())\n        .then(result => dispatch(selectLaunchesSuccess(result)))\n        .catch(error => dispatch(selectLaunchesFailure(error)))\n};\n\nexport const searchLaunches = search => {\n    return {\n        type: SEARCH_LAUNCHES,\n        search: search\n    }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Card, CardActionArea, CardMedia, CardContent } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { selectRocket } from '../redux/actions/rocket';\nimport { selectLaunches } from '../redux/actions/launches';\n\nconst useStyles = makeStyles({\n    card: {\n        height: '200px',\n        width: '300px',\n    },\n    cardContent: {\n        padding: '10px',\n        backgroundColor: 'rgb(0, 0, 0, 0.9)',\n        color: 'white'\n    },\n\n});\n\nconst RocketCard = ({ rocketId, rocketName, image, onCardClick, getLaunches }) => {\n\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Card onClick={() => { onCardClick(rocketId, rocketName) }}>\n                <CardActionArea>\n                    <CardMedia component=\"img\" alt={rocketName} image={image} title={rocketName} />\n                    <CardContent className={classes.cardContent}>\n                        {rocketName}\n                    </CardContent>\n                </CardActionArea>\n            </Card>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProp = (state) => {\n    const { rocket, launches } = state;\n    return {\n      rocket: rocket.rocket,\n      launches: launches.launches,\n    };\n  };\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n      selectRocket: (rocketId, rocketName) => {\n        dispatch(selectRocket(rocketId, rocketName))\n      },\n      selectLaunches: rocketId => {\n        dispatch(selectLaunches(rocketId))\n      },\n    }\n  }\n\nexport default connect(mapStateToProp, mapDispatchToProps)(RocketCard);","import React from 'react';\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Grid, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '../components/Button';\nimport StyledCard from '../components/StyledCard';\nimport RocketCard from '../components/RocketCard';\n\nimport falcon1 from '../images/falcon1.jpg';\nimport falcon9 from '../images/falcon9.jpg';\nimport falconheavy from '../images/falconheavy.jpg';\nimport starship from '../images/starship.jpg';\n\nimport { selectRocket } from '../redux/actions/rocket';\nimport { selectLaunches } from '../redux/actions/launches';\nimport { searchLaunches } from '../redux/actions/launches';\n\nconst useStyles = makeStyles({\n  container: {\n    padding: '50px',\n    paddingTop: '30px',\n    backgroundColor: 'rgb(225, 225, 225)'\n  },\n  title: {\n    paddingBottom: '30px'\n  },\n  missionTitle: {\n    paddingTop: '30px',\n    paddingBottom: '30px',\n  },\n  card: {\n    padding: '10px'\n  },\n  row: {\n    paddingBottom: '20px'\n  },\n  textField: {\n    backgroundColor: 'white'\n  }\n});\n\nconst HomePage = ({ rocket, launches, selectRocket, selectLaunches, searchLaunches }) => {\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    selectLaunches(rocket.rocketId);\n  }, [rocket]);\n\n  return (\n    <React.Fragment>\n      <div className={classes.container}>\n        <Grid container direction=\"row\">\n          <Grid className={classes.title} item align=\"left\" xs={12} sm={12} md={8} lg={8} xl={8}>\n            <h1>SpaceX Rockets</h1>\n          </Grid>\n          <Grid className={classes.title} item align=\"center\" xs={12} sm={12} md={4} lg={4} xl={4}>\n            <TextField className={classes.textField} placeholder=\"Search Missions...\" type=\"search\" variant=\"outlined\" fullWidth onChange={(e) => searchLaunches(e.target.value)} />\n          </Grid>\n          <Grid className={classes.card} item align=\"center\" xs={12} sm={6} md={3} lg={3} xl={3}>\n            <RocketCard rocketId=\"falcon1\" rocketName=\"Falcon 1\" image={falcon1} onCardClick={selectRocket} getLaunches={selectLaunches} />\n          </Grid>\n          <Grid className={classes.card} item align=\"center\" xs={12} sm={6} md={3} lg={3} xl={3}>\n            <RocketCard rocketId=\"falcon9\" rocketName=\"Falcon 9\" image={falcon9} onCardClick={selectRocket} getLaunches={selectLaunches} />\n          </Grid>\n          <Grid className={classes.card} item align=\"center\" xs={12} sm={6} md={3} lg={3} xl={3}>\n            <RocketCard rocketId=\"falconheavy\" rocketName=\"Falcon Heavy\" image={falconheavy} onCardClick={selectRocket} getLaunches={selectLaunches} />\n          </Grid>\n          <Grid className={classes.card} item align=\"center\" xs={12} sm={6} md={3} lg={3} xl={3}>\n            <RocketCard rocketId=\"bfr\" rocketName=\"Starship\" image={starship} onCardClick={selectRocket} getLaunches={selectLaunches} />\n          </Grid>\n          <Grid className={classes.missionTitle} item align=\"left\" xs={12} sm={12} md={12} lg={12} xl={12}>\n            <h1>{rocket.rocketName} Missions</h1>\n          </Grid>\n          {launches.map(launch => {\n            return (\n              <Grid className={classes.row} item align=\"left\" xs={12} sm={12} md={12} lg={12} xl={12}>\n                <StyledCard rocketName={launch.rocket.rocket_name} type={launch.rocket.rocket_type} details={launch.details} location={launch.launch_site.site_name_long} launchDate={(new Date(launch.launch_date_utc)).toLocaleDateString()} />\n              </Grid>\n              )\n            })\n          }\n        </Grid>\n        </div>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProp = (state) => {\n  const { rocket, launches } = state;\n  return {\n    rocket: rocket.rocket,\n    launches: launches.launches,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    selectRocket: (rocketId, rocketName) => {\n      dispatch(selectRocket(rocketId, rocketName))\n    },\n    selectLaunches: rocketId => {\n      dispatch(selectLaunches(rocketId))\n    },\n    searchLaunches: search => {\n      dispatch(searchLaunches(search))\n    }\n  }\n}\n\nexport default connect(mapStateToProp, mapDispatchToProps)(HomePage);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { renderRoutes } from 'react-router-config';\nimport { createBrowserHistory } from 'history';\nimport { ConnectedRouter } from 'connected-react-router';\n\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './configureStore';\nimport createRoutes from './routes';\n\nimport './main.css';\n\nconst initialState = {};\n\nconst history = createBrowserHistory();\nconst store = configureStore(initialState, history);\nconst routes = createRoutes(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      {renderRoutes(routes)}\n    </ConnectedRouter>\n  </Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './redux/reducers';\n\nexport default (initialState, history) => {\n  // Installs hooks that always keep react-router and redux store in sync\n  const middleware = [\n    thunk,\n    routerMiddleware(history),\n  ];\n  let store;\n  middleware.push(createLogger());\n  store = createStore(rootReducer(history), initialState, compose(\n    applyMiddleware(...middleware),\n    typeof window === 'object' && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n  ));\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('./redux/reducers', () => {\n      const nextReducer = require('./redux/reducers');\n      store.replaceReducer(nextReducer);\n    });\n  }\n  return store;\n};\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport rocket from './rocket';\nimport launches from './launches';\n\nexport default (history) => combineReducers({\n  router: connectRouter(history),\n  rocket,\n  launches\n});\n","/// layouts\nimport AppLayout from './layouts/AppLayout';\n\n// pages\nimport HomePage from './pages/HomePage';\n\n/*\n * @param {Redux Store}\n * We require store as an argument here because we wish to get\n * state from the store after it has been authenticated.\n * https://reacttraining.com/react-router/web/guides/server-rendering/data-loading\n */\nexport default () => {\n  return [\n    {\n      component: AppLayout,\n      routes: [\n        {\n          component: HomePage,\n          path: '/',\n          exact: true,\n        },\n        {\n          component: HomePage,\n          path: '*',\n          exact: true,\n        },\n      ]\n    }\n  ];\n};\n\nif (module.hot) {\n  module.hot.accept();\n}\n"],"sourceRoot":""}