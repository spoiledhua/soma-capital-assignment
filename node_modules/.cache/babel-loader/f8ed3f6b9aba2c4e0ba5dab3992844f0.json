{"ast":null,"code":"import { SELECT_LAUNCHES } from '../types';\nexport const selectLaunches = async rocketId => {\n  var launches = {\n    type: SELECT_LAUNCHES,\n    launches: null\n  };\n  const filter = \"filter=rocket/rocket_name,rocket/rocket_type,launch_date_utc,launch_site/site_name_long,details\";\n  const url = \"https://api.spacexdata.com/v3/launches\";\n  const rocket = \"rocket_id=\" + rocketId;\n  await fetch(url + \"?\" + filter + \"&\" + rocket).then(response => response.text()).then(result => {\n    launches.launches = result;\n    console.log(\"Before: \" + launches.launches);\n  }).catch(error => console.log(error));\n  console.log(\"After: \" + launches.launches);\n  return launches;\n};","map":{"version":3,"sources":["/Users/spoiledhua/Desktop/soma-frontend-code-test-master/src/redux/actions/launches.js"],"names":["SELECT_LAUNCHES","selectLaunches","rocketId","launches","type","filter","url","rocket","fetch","then","response","text","result","console","log","catch","error"],"mappings":"AAAA,SACIA,eADJ,QAES,UAFT;AAIA,OAAO,MAAMC,cAAc,GAAG,MAAMC,QAAN,IAAkB;AAC5C,MAAIC,QAAQ,GAAG;AACXC,IAAAA,IAAI,EAAEJ,eADK;AAEXG,IAAAA,QAAQ,EAAE;AAFC,GAAf;AAKA,QAAME,MAAM,GAAG,iGAAf;AACA,QAAMC,GAAG,GAAG,wCAAZ;AACA,QAAMC,MAAM,GAAG,eAAeL,QAA9B;AACA,QAAMM,KAAK,CAACF,GAAG,GAAG,GAAN,GAAYD,MAAZ,GAAqB,GAArB,GAA2BE,MAA5B,CAAL,CACDE,IADC,CACIC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADhB,EAEDF,IAFC,CAEIG,MAAM,IAAI;AACZT,IAAAA,QAAQ,CAACA,QAAT,GAAoBS,MAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaX,QAAQ,CAACA,QAAlC;AACH,GALC,EAMDY,KANC,CAMKC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CANd,CAAN;AAQAH,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAYX,QAAQ,CAACA,QAAjC;AAEA,SAAOA,QAAP;AACH,CApBM","sourcesContent":["import {\n    SELECT_LAUNCHES\n  } from '../types';\n\nexport const selectLaunches = async rocketId => {\n    var launches = {\n        type: SELECT_LAUNCHES,\n        launches: null,\n    };\n\n    const filter = \"filter=rocket/rocket_name,rocket/rocket_type,launch_date_utc,launch_site/site_name_long,details\";\n    const url = \"https://api.spacexdata.com/v3/launches\";\n    const rocket = \"rocket_id=\" + rocketId;\n    await fetch(url + \"?\" + filter + \"&\" + rocket)\n        .then(response => response.text())\n        .then(result => {\n            launches.launches = result;\n            console.log(\"Before: \" + launches.launches);\n        })\n        .catch(error => console.log(error));\n\n    console.log(\"After: \" + launches.launches);\n\n    return launches;\n};"]},"metadata":{},"sourceType":"module"}