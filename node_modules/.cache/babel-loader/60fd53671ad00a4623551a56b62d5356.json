{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './redux/reducers';\nexport default ((initialState, history) => {\n  // Installs hooks that always keep react-router and redux store in sync\n  const middleware = [thunk, routerMiddleware(history)];\n  let store;\n  middleware.push(createLogger());\n  store = createStore(rootReducer(history), initialState, compose(applyMiddleware(...middleware), typeof window === 'object' && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f));\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('./redux/reducers', () => {\n      const nextReducer = require('./redux/reducers');\n\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  return store;\n});","map":{"version":3,"sources":["/Users/spoiledhua/Desktop/soma-frontend-code-test-master/src/configureStore.js"],"names":["createStore","applyMiddleware","compose","routerMiddleware","thunk","createLogger","rootReducer","initialState","history","middleware","store","push","window","__REDUX_DEVTOOLS_EXTENSION__","f","module","hot","accept","nextReducer","require","replaceReducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA,gBAAe,CAACC,YAAD,EAAeC,OAAf,KAA2B;AACxC;AACA,QAAMC,UAAU,GAAG,CACjBL,KADiB,EAEjBD,gBAAgB,CAACK,OAAD,CAFC,CAAnB;AAIA,MAAIE,KAAJ;AACAD,EAAAA,UAAU,CAACE,IAAX,CAAgBN,YAAY,EAA5B;AACAK,EAAAA,KAAK,GAAGV,WAAW,CAACM,WAAW,CAACE,OAAD,CAAZ,EAAuBD,YAAvB,EAAqCL,OAAO,CAC7DD,eAAe,CAAC,GAAGQ,UAAJ,CAD8C,EAE7D,OAAOG,MAAP,KAAkB,QAAlB,IAA8B,OAAOA,MAAM,CAACC,4BAAd,KAA+C,WAA7E,GAA2FD,MAAM,CAACC,4BAAP,EAA3F,GAAmIC,CAAC,IAAIA,CAF3E,CAA5C,CAAnB;;AAIA,MAAIC,MAAM,CAACC,GAAX,EAAgB;AACd;AACAD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,kBAAlB,EAAsC,MAAM;AAC1C,YAAMC,WAAW,GAAGC,OAAO,CAAC,kBAAD,CAA3B;;AACAT,MAAAA,KAAK,CAACU,cAAN,CAAqBF,WAArB;AACD,KAHD;AAID;;AACD,SAAOR,KAAP;AACD,CApBD","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './redux/reducers';\n\nexport default (initialState, history) => {\n  // Installs hooks that always keep react-router and redux store in sync\n  const middleware = [\n    thunk,\n    routerMiddleware(history),\n  ];\n  let store;\n  middleware.push(createLogger());\n  store = createStore(rootReducer(history), initialState, compose(\n    applyMiddleware(...middleware),\n    typeof window === 'object' && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n  ));\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('./redux/reducers', () => {\n      const nextReducer = require('./redux/reducers');\n      store.replaceReducer(nextReducer);\n    });\n  }\n  return store;\n};\n"]},"metadata":{},"sourceType":"module"}